<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.terradue</groupId>
  <artifactId>dcs-parent</artifactId>
  <version>3.0.1-docker</version>
  <packaging>pom</packaging>
  <name>DCS parent POM</name>
  <description>Parent POM for Terradue's Developer Cloud Sandbox (DCS) Applications</description>
  <inceptionYear>2018</inceptionYear>
  <organization>
    <name>Terradue S.r.l.</name>
    <url>https://www.terradue.com/</url>
  </organization>
  <licenses>
    <license>
      <name>Terradue</name>
    </license>
  </licenses>
  <ciManagement>
    <system>Jenkins</system>
    <url>https://build.terradue.com/</url>
    <notifiers>
      <notifier>
        <type>mail</type>
        <sendOnError>true</sendOnError>
        <sendOnFailure>true</sendOnFailure>
        <sendOnSuccess>false</sendOnSuccess>
        <sendOnWarning>false</sendOnWarning>
      </notifier>
    </notifiers>
  </ciManagement>
  <distributionManagement>
    <snapshotRepository>
      <id>store.terradue.com</id>
      <name>store.terradue.com-snapshots</name>
      <url>https://store.terradue.com/api/libs-snapshot-local</url>
    </snapshotRepository>
    <repository>
      <id>store.terradue.com</id>
      <name>store.terradue.com-releases</name>
      <url>https://store.terradue.com/api/libs-release-local</url>
    </repository>
  </distributionManagement>
  <repositories>
    <repository>
      <id>store.terradue.com</id>
      <name>store.terradue.com-releases</name>
      <url>http://store.terradue.com/api/any</url>
      <releases>
        <checksumPolicy>warn</checksumPolicy>
      </releases>
    </repository>
  </repositories>
  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.build.resourceEncoding>UTF-8</project.build.resourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    <maven.build.timestamp.format>yyyy-MM-dd HH:mm:ssZ</maven.build.timestamp.format>
    <implementation.build>${scmBranch}@r${buildNumber};${maven.build.timestamp}</implementation.build>
    <rpmBasedir>${project.build.directory}/rpm</rpmBasedir>
    <rpmTopdir>${project.build.directory}/rpm/${project.artifactId}</rpmTopdir>
    <yumRepo>null</yumRepo>
    <yumRepoType>testing</yumRepoType>
    <dcsparent.version>2.1.0-docker-SNAPSHOT</dcsparent.version>
    <docker.repository>docker-co.terradue.com</docker.repository>
    <community/>
  </properties>
  <build>
    <plugins>
      <plugin>
        <groupId>external.atlassian.jgitflow</groupId>
        <artifactId>jgitflow-maven-plugin</artifactId>
        <version>1.0-m4.3</version>
        <configuration>
          <allowSnapshots>true</allowSnapshots>
          <noDeploy>true</noDeploy>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-install-plugin</artifactId>
        <version>2.3.1</version>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-scm-plugin</artifactId>
        <version>1.9.1</version>
        <executions>
          <execution>
            <id>check-repo</id>
            <goals>
              <goal>validate</goal>
            </goals>
            <phase>validate</phase>
          </execution>
        </executions>
        <configuration>
          <scmCheckWorkingDirectoryUrl>true</scmCheckWorkingDirectoryUrl>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-assembly-plugin</artifactId>
        <inherited>false</inherited>
        <executions>
          <execution>
            <id>create-docker-packaging</id>
            <phase>package</phase>
            <goals>
              <goal>single</goal>
            </goals>
            <configuration>
              <descriptors>
                <descriptor>src/assembly/docker.xml</descriptor>
              </descriptors>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-release-plugin</artifactId>
          <version>2.4.1</version>
          <configuration>
            <mavenExecutorId>forked-path</mavenExecutorId>
            <useReleaseProfile>true</useReleaseProfile>
            <releaseProfiles>release</releaseProfiles>
            <allowTimestampedSnapshots>true</allowTimestampedSnapshots>
            <arguments>-DnewVersion=${developmentVersion}</arguments>
            <goals/>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-resources-plugin</artifactId>
          <version>2.6</version>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>wagon-maven-plugin</artifactId>
          <version>1.0-beta-4</version>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>rpm-maven-plugin</artifactId>
          <version>2.1.5</version>
          <executions>
            <execution>
              <id>generate-rpm</id>
              <goals>
                <goal>version</goal>
                <goal>rpm</goal>
                <goal>attached-rpm</goal>
              </goals>
              <phase>compile</phase>
              <configuration>
                <copyright>${project.inceptionYear}, Terradue, GPL</copyright>
                <distribution>Terradue ${project.inceptionYear}</distribution>
                <packager>Terradue</packager>
                <name>${project.artifactId}</name>
                <defaultUsername>root</defaultUsername>
                <defaultGroupname>root</defaultGroupname>
                <defaultDirmode>755</defaultDirmode>
                <defaultFilemode>644</defaultFilemode>
                <group>dcs</group>
                <autoRequires>false</autoRequires>
                <autoProvides>false</autoProvides>


                  <defineStatements>
                    <defineStatement>_unpackaged_files_terminate_build 0</defineStatement>
                  </defineStatements>



                <mappings>
                  <mapping>
                    <directory>/application</directory>
                    <directoryIncluded>false</directoryIncluded>
                    <recurseDirectories>true</recurseDirectories>
                    <sources>
                      <source>
                        <location>${basedir}/src/main/app-resources/</location>
                      </source>
                    </sources>
                  </mapping>
                  <mapping>
                    <directory>/application</directory>
                    <filemode>664</filemode>
                    <sources>
                      <source>
                        <location>${basedir}/src/main/app-resources</location>
                        <includes>
                          <include>application.xml</include>
                        </includes>
                      </source>
                    </sources>
                  </mapping>
                  <mapping>
                    <directory>/application</directory>
                    <sources>
                      <source>
                        <location>${basedir}/src/main/app-resources</location>
                        <includes>
                          <include>**/run**</include>
                          <include>**/bin**</include>
                          <include>**/*.sh</include>
                          <include>**/*.py</include>
                          <include>**/*.R</include>
                          <include>**/*.exe</include>
                          <include>**/*.sav</include>
                        </includes>
                      </source>
                    </sources>
                    <filemode>755</filemode>
                  </mapping>

                    <mapping>
                      <directory>/application/dependencies/python/</directory>
                      <sources>
                        <source>
                          <location>${basedir}/src/main/app-resources/dependencies/python/packages.list</location>
                        </source>
                      </sources>
                    </mapping>


                </mappings>

<requires>
                    <require>idl</require>
                    <require>miniconda</require>
                    <require>libgeotiff</require>
                    <require>STEMP-S2</require>
</requires>

                  <postinstallScriptlet>
                    <script>conda install -y --file /application/dependencies/python/packages.list</script>
                  </postinstallScriptlet>


              </configuration>
            </execution>
          </executions>
        </plugin>
      </plugins>
    </pluginManagement>
    <extensions>
      <extension>
        <groupId>org.apache.maven.wagon</groupId>
        <artifactId>wagon-ssh</artifactId>
        <version>1.0</version>
      </extension>
    </extensions>
  </build>
  <profiles>
    <profile>
      <id>install-and-test</id>
      <activation>
        <property>
          <name>env</name>
          <value>sandbox</value>
        </property>
      </activation>
      <distributionManagement>
        <snapshotRepository>
          <id>store.terradue.com</id>
          <name>store.terradue.com-snapshots</name>
          <url>https://store.terradue.com/api/${community}</url>
        </snapshotRepository>
        <repository>
          <id>store.terradue.com</id>
          <name>store.terradue.com-releases</name>
          <url>https://store.terradue.com/api/${community}</url>
        </repository>
      </distributionManagement>
      <build>
        <plugins>
          <plugin>
            <artifactId>maven-clean-plugin</artifactId>
            <version>2.5</version>
            <configuration>
              <filesets>
                <fileset>
                  <directory>/application</directory>
                  <includes>
                    <include>**/*</include>
                  </includes>
                  <excludes>
                    <!-- added to be retro-compatible with the old BEAM package -->
                    <exclude>**/share/**</exclude>
                  </excludes>
                  <followSymlinks>false</followSymlinks>
                </fileset>
              </filesets>
            </configuration>
          </plugin>
          <plugin>
            <artifactId>maven-resources-plugin</artifactId>
            <version>2.6</version>
            <executions>
              <execution>
                <id>copy-app-resources</id>
                <phase>install</phase>
                <goals>
                  <goal>copy-resources</goal>
                </goals>
                <configuration>
                  <outputDirectory>/application</outputDirectory>
                  <resources>
                    <resource>
                      <directory>${basedir}/src/main/app-resources/</directory>
                    </resource>
                  </resources>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-antrun-plugin</artifactId>
            <version>1.6</version>
            <executions>
              <execution>
                <id>create target</id>
                <phase>initialize</phase>
                <configuration>
                  <target>
                    <mkdir dir="${project.build.directory}"/>
                  </target>
                </configuration>
                <goals>
                  <goal>run</goal>
                </goals>
              </execution>
              <execution>
                <id>change perm</id>
                <phase>install</phase>
                <configuration>
                  <target>
                    <chmod dir="/application" includes="**/run**" perm="755"/>
                    <chmod dir="/application" includes="**/bin**" perm="755"/>
                    <chmod dir="/application" includes="**/*.sh" perm="755"/>
                    <chmod dir="/application" includes="**/*.py" perm="755"/>
                    <chmod dir="/application" includes="**/*.R" perm="755"/>
                    <chmod dir="/application" includes="**/*.exe" perm="755"/>
                    <chmod dir="/application" includes="**/*.sav" perm="755"/>
                    <chmod file="/application/application.xml" perm="664"/>
                  </target>
                </configuration>
                <goals>
                  <goal>run</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>package-app</id>
      <activation>
        <property>
          <name>env</name>
          <value>ci</value>
        </property>
      </activation>
      <distributionManagement>
        <snapshotRepository>
          <id>store.terradue.com</id>
          <name>store.terradue.com-snapshots</name>
          <url>https://store.terradue.com/api/${community}</url>
        </snapshotRepository>
        <repository>
          <id>store.terradue.com</id>
          <name>store.terradue.com-releases</name>
          <url>https://store.terradue.com/api/${community}</url>
        </repository>
      </distributionManagement>
      <build>
        <plugins>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>rpm-maven-plugin</artifactId>
            <version>2.1.5</version>
            <executions>
              <execution>
                <id>rpm-version</id>
                <goals>
                  <goal>version</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>buildnumber-maven-plugin</artifactId>
            <version>1.0</version>
            <executions>
              <execution>
                <phase>validate</phase>
                <goals>
                  <goal>create</goal>
                </goals>
              </execution>
            </executions>
            <configuration>
              <useLastCommittedRevision>true</useLastCommittedRevision>
              <revisionOnScmFailure>??????</revisionOnScmFailure>
              <providerImplementations>
                <svn>javasvn</svn>
              </providerImplementations>
            </configuration>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-site-plugin</artifactId>
            <version>3.0</version>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>package-docker</id>
      <activation>
        <property>
          <name>env</name>
          <value>ci</value>
        </property>
      </activation>
      <distributionManagement>
        <snapshotRepository>
          <id>store.terradue.com</id>
          <name>store.terradue.com-snapshots</name>
          <url>https://store.terradue.com/api/${community}</url>
        </snapshotRepository>
        <repository>
          <id>store.terradue.com</id>
          <name>store.terradue.com-releases</name>
          <url>https://store.terradue.com/api/${community}</url>
        </repository>
      </distributionManagement>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-dependency-plugin</artifactId>
            <executions>
              <execution>
                <goals>
                  <goal>unpack</goal>
                </goals>
                <configuration>
                  <artifactItems>
                    <artifactItem>
                      <groupId>com.terradue</groupId>
                      <artifactId>dcs-parent</artifactId>
                      <classifier>docker</classifier>
                      <version>${dcsparent.version}</version>
                      <type>zip</type>
                    </artifactItem>
                  </artifactItems>
                  <outputDirectory>${project.build.directory}</outputDirectory>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>com.google.code.maven-replacer-plugin</groupId>
            <artifactId>replacer</artifactId>
            <version>1.5.2</version>
            <executions>
              <execution>
                <phase>generate-resources</phase>
                <goals>
                  <goal>replace</goal>
                </goals>
              </execution>
            </executions>
            <configuration>
              <ignoreMissingFile>false</ignoreMissingFile>
              <file>${project.build.directory}/docker-pack/Dockerfile</file>
              <replacements>
                <replacement>
                  <token>%RPM_PATH%</token>
                  <value>${project.artifactId}-${rpm.version}-${rpm.release}.noarch.rpm</value>
                </replacement>
              </replacements>
            </configuration>
          </plugin>
          <plugin>
            <artifactId>maven-resources-plugin</artifactId>
            <version>3.0.2</version>
            <executions>
              <execution>
                <id>copy-resources</id>
                <!-- here the phase you need -->
                <phase>prepare-package</phase>
                <goals>
                  <goal>copy-resources</goal>
                </goals>
                <configuration>
                  <outputDirectory>${project.build.directory}/docker-pack</outputDirectory>
                  <resources>
                    <resource>
                      <directory>${project.build.directory}/rpm/${project.artifactId}/RPMS/noarch/</directory>
                      <includes>
                        <include>${project.artifactId}-${rpm.version}-${rpm.release}.noarch.rpm</include>
                      </includes>
                      <filtering>false</filtering>
                    </resource>
                  </resources>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>io.fabric8</groupId>
            <artifactId>docker-maven-plugin</artifactId>
            <version>0.20.1</version>
            <executions>
              <execution>
                <goals>
                  <goal>build</goal>
                  <goal>push</goal>
                  <goal>remove</goal>
                </goals>
              </execution>
            </executions>
            <configuration>
              <autoPull>always</autoPull>
              <verbose>true</verbose>
              <images>
                <image>
                  <name>${docker.repository}/${community}/${project.artifactId}:${project.version}</name>
                  <build>
                    <dockerFileDir>${project.build.directory}/docker-pack</dockerFileDir>
                  </build>
                </image>
              </images>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>release</id>
      <activation>
        <property>
          <name>release</name>
          <value>true</value>
        </property>
      </activation>
      <properties>
        <yumRepoType>stable</yumRepoType>
      </properties>
    </profile>
    <profile>
      <id>deploy-application</id>
      <activation>
        <property>
          <name>env</name>
          <value>ci</value>
        </property>
      </activation>
      <distributionManagement>
        <snapshotRepository>
          <id>store.terradue.com</id>
          <name>store.terradue.com-snapshots</name>
          <url>https://store.terradue.com/api/${community}</url>
        </snapshotRepository>
        <repository>
          <id>store.terradue.com</id>
          <name>store.terradue.com-releases</name>
          <url>https://store.terradue.com/api/${community}</url>
        </repository>
      </distributionManagement>
      <build>
        <plugins>

          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>exec-maven-plugin</artifactId>
            <version>1.3.1</version>
            <executions>
 				<execution>
                <id>add ows file</id>
                <phase>package</phase>
                <goals>
                  <goal>exec</goal>
                </goals>
                <configuration>
                  <executable>curl</executable>
                  <arguments>
				    <argument>-L</argument>
                    <argument>-o</argument>
                    <argument>${basedir}/src/main/app-resources/application-context.xml</argument>
                    <argument>--data</argument>
                    <argument>@${basedir}/src/main/app-resources/application.xml</argument>
                    <argument>-X</argument>
                    <argument>POST</argument>
                    <argument>https://t2-app-ows.terradue.com/t2dep/owscontext.cgi?deploy=/${community}/${project.artifactId}/${project.version}/application.xml</argument>
                  </arguments>
                  <!--<outputFile>${basedir}/src/main/app-resources/dependencies/python/packages.list</outputFile>-->
                </configuration>
              </execution>
            </executions>
          </plugin>


          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-deploy-plugin</artifactId>
            <version>2.8.2</version>
            <executions>
              <execution>
                <id>deploy-applicationxml</id>
                <goals>
                  <goal>deploy-file</goal>
                </goals>
                <phase>deploy</phase>
                <configuration>
                  <file>${basedir}/src/main/app-resources/application.xml</file>
                  <groupId>${community}</groupId>
                  <url>https://store.terradue.com/api/${community}/_applications</url>
                  <generatePom>false</generatePom>
                  <repositoryId>store.terradue.com</repositoryId>
                  <artifactId>${project.artifactId}</artifactId>
                  <version>${project.version}</version>
                  <classifier>application</classifier>
                  <packaging>xml</packaging>
                </configuration>
              </execution>

			<execution>
                <id>deploy-application-context.xml</id>
                <goals>
                  <goal>deploy-file</goal>
                </goals>
                <phase>deploy</phase>
                <configuration>
                  <file>${basedir}/src/main/app-resources/application-context.xml</file>
                  <groupId>${community}</groupId>
                  <url>https://store.terradue.com/api/${community}/_applications</url>
                  <generatePom>false</generatePom>
                  <repositoryId>store.terradue.com</repositoryId>
                  <artifactId>${project.artifactId}</artifactId>
                  <version>${project.version}</version>
                  <classifier>application-context</classifier>
                  <packaging>xml</packaging>
                </configuration>
              </execution>

            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
